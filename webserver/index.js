const express = require('express');
const multer = require('multer');
const https = require('https');
const path = require('path');
const fs = require('fs');
const bp = require('body-parser');

const options = {
	key: fs.readFileSync('./tls/key.pem'),
	cert: fs.readFileSync('./tls/cert.pem')
}

const storage = multer.diskStorage({
	destination: (req, file, cb) => {
		const dest = 'uploads/';
		console.log('Destination: ', dest);

		fs.access(dest, fs.constants.F_OK, (err) => {
			if (err) {
				console.error('Dest does not exist: ', err);
				return cb(err, null);
			}
			cb(null, 'uploads/');
		})
	},
	filename: (req, file, cb) => {
		cb(null, Date.now() + path.extname(file.originalname));
	}
});

const upload = multer({
	storage: storage
});

let cmd = '00000'

const app = express();
const port = 443;
const server = https.createServer(options, app);

app.use(express.static(__dirname + '/public'));
app.use(bp.urlencoded({extended: true}));
app.use(bp.json());

app.use((req, res, next) => {
	console.log(`[${new Date().toISOString()}] ${req.method} ${req.url}`);
	next();
});

app.get('/', (req, res) => {
	res.sendFile(__dirname + 'public/index.html');
});

app.get('/command', (req, res) => {
	res.send(cmd);
});

app.post('/update1/:command', (req, res) => {
	cmd = req.params.command;
	console.log(`cmd is now ${cmd}`);
	res.status(200);
});

app.post('/update2/:command', (req, res) => {
	cmd = req.params.command;
	console.log(`cmd is now ${cmd}`);
	res.status(200);
});

app.post('/update3/:command', (req, res) => {
	cmd = req.params.command;
	console.log(`cmd is now ${cmd}`);
	res.status(200);
});

app.post('/update4/:command', (req, res) => {
	cmd = req.params.command;
	console.log(`cmd is now ${cmd}`);
	res.status(200);
});

app.post('/update5/:command', (req, res) => {
	cmd = req.params.command;
	console.log(`cmd is now ${cmd}`);
	res.status(200);
});

app.post('/update6/:command', (req, res) => {
	cmd = req.params.command;
	console.log(`cmd is now ${cmd}`);
	res.status(200);
});

app.post('/update7/:command', (req, res) => {
	cmd = req.params.command;
	console.log(`cmd is now ${cmd}`);
	res.status(200);
});

app.post('/upload', upload.single('file'), (req, res) => {
	res.status(200).send("OK");
});

server.listen(port, () => {
	console.log(`Server is running on https://localhost:${port}`);
});